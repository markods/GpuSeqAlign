// algorithm parameters
{
   "NwAlign_Cpu3_St_DiagRow":
   {
      // // size of square block (that will be a unit of work)
      // // +   8*(16 ints) on standard architectures, or 8 cache lines
      // int blocksz = 8 * 64/*B*//sizeof( int );
      "blocksz":  [ 32, 64, 128, 192, 256, 384, 512, 1024, 1536, 2048, 4096, 8192 ]
   },
   "NwAlign_Cpu4_Mt_DiagRow":
   {
      // // size of square block (that will be a unit of work)
      // // +   8*(16 ints) on standard architectures, or 8 cache lines
      // int blocksz = 8 * 64/*B*//sizeof( int );
      "blocksz": [ 32, 64, 128, 192, 256, 384, 512, 1024, 1536, 2048, 4096, 8192 ]
   },
   "NwAlign_Gpu1_Ml_Diag":
   {
      // // number of threads per block
      // // +   the tile is one-dimensional
      // unsigned threadsPerBlock = 8*warpsz;
      "threadsPerBlock": [ 32, 64, 96, 128, 160, 192, 256, 384, 512 ]
   },
   "NwAlign_Gpu2_Ml_DiagRow2Pass":
   {
      // // tile size for the kernel B
      // unsigned tileBx = 8;
      "tileBx": [ 6, 7, 8, 9, 10 ],
      // unsigned tileBy = 4;
      "tileBy": [ 1, 2, 3, 4, 5, 6 ],
      // // number of threads per block for kernels A and B
      // unsigned threadsPerBlockA = 16*warpsz;
      // unsigned threadsPerBlockB = 8*warpsz;
      "threadsPerBlock": [ 32, 64, 96, 128, 160 ]
   },
   "NwAlign_Gpu5_Coop_DiagDiag":
   {
      // // tile size for the kernel
      // // +   tile A must have one dimension fixed to the number of threads in a warp
      // unsigned tileAx = 40;
      "tileAx": [ 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76 ],
      // unsigned tileAy = warpsz;
      "tileAy": [ 32 ]
   },
   "NwAlign_Gpu6_Coop_DiagDiag2Pass":
   {
      // // tile sizes for kernels A and B
      // // +   tile A should have one dimension be a multiple of the warp size for full memory coallescing
      // // +   tile B must have one dimension fixed to the number of threads in a warp
      // unsigned tileAx = 1*warpsz;
      "tileAx": [ 128 ],
      // unsigned tileAy = 32;
      "tileAy": [ 40 ],
      // unsigned tileBx = 60;
      "tileBx": [ 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 76, 78, 80 ],
      // unsigned tileBy = warpsz;
      "tileBy": [ 32 ]
   },
   "NwAlign_Gpu10_Mlsp_DiagDiagDiagSkew2":
   {
      // // tile size for the kernel
      // unsigned tileAx = 320;
      "tileAx": [ 256, 320, 384, 448, 512, 640 ],
      // unsigned tileAy = 4*warpsz;   // must be a multiple of the warp size
      "tileAy": [ 32, 64, 96, 128, 160, 192 ],
      // int chunksz = 32;
      "chunksz": [ 24, 32, 40, 48, 56, 64 ]
   }
}
